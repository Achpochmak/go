version: "3.3"

networks:
  net:
    driver: bridge

services:
  postgres:
    image: postgres:15.1
    environment:
      POSTGRES_DB: oms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: 'postgres-container'
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d oms"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 4G
    container_name: 'app-container'
    restart: unless-stopped
    hostname: server
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/oms
    ports:
      - 8080:8080
    command: ./app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net

  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 'test-container'
    restart: unless-stopped
    environment:
      POSTGRES_DB: oms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/oms
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/var/lib/postgresql/data
      - ./config.yaml:/config.yaml
    networks:
      - net
    command: ["sh", "-c", "sleep 20 && go test ./tests/integration_tests -v && while :; do sleep 1; done"] # Command to run tests
